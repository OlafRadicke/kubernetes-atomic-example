---
- name: install needed tools
  dnf:
    name: "{{ item }}"
    state: "latest"
  with_items:
    - virt-install

- name: remove vm images
  shell: "rm -f {{ imagestorage }}/{{ minionid }}.qcow2"

- name: copy vm images
  shell: "rsync {{ isostorage }}/{{ vmimages }}.qcow2 {{ imagestorage }}/{{ minionid }}.qcow2"

- name : "create tmp directory"
  file:
    path: "{{ item }}"
    state: "directory"
    mode: "0755"
  with_items:
    - "/tmp/docker-cluster/{{ minionid }}"
    - "{{ cloudinitisos }}/{{ minionid }}/"

- name: user-data copy
  template:
    src: "../files/{{ item }}.j2"
    dest: "/tmp/docker-cluster/{{ minionid }}/{{ item }}"
  with_items:
    - "meta-data"
    - "user-data"

- name: "remove old cloud init iso"
  shell: "rm -f {{ cloudinitisos }}/{{ minionid }}/init-config.iso"

- name: "Create cloud init iso"
  shell: "genisoimage -output {{ cloudinitisos }}/{{ minionid }}/init-config.iso -volid cidata -joliet -rock user-data meta-data"
  args:
    chdir: "/tmp/docker-cluster/{{ minionid }}"

- name: "create minion vm"
  command: "virt-install --import \
  --name {{ minionid }}  \
  --ram {{ vram }}  \
  --vcpus {{ vcpus }} \
  --disk path={{ imagestorage }}/{{ minionid }}.qcow2,format=qcow2,bus=virtio \
  --network bridge:virbr0 \
  --graphics none  \
  --force \
  --disk path={{ cloudinitisos }}/{{ minionid }}/init-config.iso,device=cdrom "
  async: 40
  poll: 5
